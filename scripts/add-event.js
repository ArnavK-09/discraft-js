import fs from"fs";import path from"path";import{search,input}from"@inquirer/prompts";import{success,error}from"../common/utils/logger.js";import{Events}from"discord.js";async function generateEvent(){const e=fs.existsSync(path.join(process.cwd(),"src")),r=process.cwd().endsWith("src");e||(r?(error('You are in the "src/" directory. You should be in the root of your Discraft project.'),process.exit(1)):(error('The "src/" directory does not exist. Please run "discraft init" to initialize a project, or ensure you are in the root of your Discraft project.'),process.exit(1)));const t={name:"",type:""};try{if(t.name=await input({message:"Event name:",required:!0,validate:e=>!!/^[a-z]+(-[a-z]+)*$/.test(e)||"Must be lowercase with single dashes only."}),t.type=await search({message:"Event type:",required:!0,source:async e=>{const r=Object.keys(Events).map((e=>({name:e,value:e})));return e?r.filter((r=>r.name.toLowerCase().includes(e.toLowerCase()))).map((e=>({name:`${e.name}`,value:e.value}))):r}}),"custom"===t.type){const e=await input({message:"Custom event name (from Discord.js Events):",required:!0,validate:e=>e.length>0});t.type=e.customEventName}}catch(e){return"ExitPromptError"===e.name?(error("Cancelled by user."),process.exit(0)):(error("Error:",e),process.exit(1))}const s=path.join(process.cwd(),"src","events");fs.existsSync(s)||fs.mkdirSync(s,{recursive:!0});const n=path.join(s,`${t.name}.js`),o=`import { debug, error } from "../utils/logger.js";\nimport { Events } from "discord.js";\n\nexport default (client) => {\n    client.on(Events.${t.type}, (${"messageCreate"===t.type?"message":"event"}) => {\n        debug("'${t.name}' event triggered");\n        try {\n            // Add your event handling logic here\n            \n        } catch (err) {\n            error("Error in '${t.name}' event handler:", err);\n        }\n    });\n};\n`;try{return fs.writeFileSync(n,o),success(`Created event handler at src/events/${t.name}.js\nEvent will trigger on: ${t.type}`),{name:t.name}}catch(e){return error("Error creating event file:",e),process.exit(1)}}generateEvent().catch((e=>{error("Error creating event:",e),process.exit(1)}));