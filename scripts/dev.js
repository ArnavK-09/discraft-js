import nodemon from"nodemon";import{info,warn,error,success}from"../common/utils/logger.js";import generateCommands from"./compile/genCommands.js";import generateEvents from"./compile/genEvents.js";import path from"path";import fs from"fs";try{const projectDir=process.cwd();fs.existsSync(path.join(projectDir,"src"))||(error("No src/ directory found. Please ensure you are in a Discraft project directory."),process.exit(1));const srcDir=path.join(projectDir,"src");generateCommands(srcDir),generateEvents(srcDir);const mon=nodemon({exec:"node -r dotenv/config",script:path.join(srcDir,"index.js"),watch:[srcDir],ext:"js",env:{NODE_ENV:"development"}});mon.on("quit",(()=>{info("Development mode terminated"),process.exit()})),mon.on("error",(err=>{error("Nodemon error:",err)})),mon.on("restart",(files=>{const restartTime=Date.now();info(`Restarting due to changes in ${files.length} files...`),generateCommands(srcDir),generateEvents(srcDir),success(`Restart complete in ${Date.now()-restartTime}ms`)})),process.on("SIGINT",(()=>{warn("Received SIGINT. Gracefully shutting down..."),mon.emit("quit")})),process.on("SIGTERM",(()=>{warn("Received SIGTERM. Gracefully shutting down..."),mon.emit("quit")})),mon.on("start",(()=>{info("Starting development mode...")})),mon.on("stdout",(data=>{process.stdout.write(data)})),mon.on("stderr",(data=>{process.stderr.write(data)})),mon.on("crash",(()=>{error("Application crashed - waiting for file changes before restarting...")}))}catch(err){"ENOENT"===err.code?error("Could not determine current working directory. Please ensure you are in a valid directory with proper permissions."):error("Failed to start development server:",err),process.exit(1)}