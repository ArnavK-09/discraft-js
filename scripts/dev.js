import fs from"fs";import nodemon from"nodemon";import path from"path";import{error,info,success,warn}from"../common/utils/logger.js";import generateCommands from"./compile/genCommands.js";import generateEvents from"./compile/genEvents.js";try{const e=process.cwd();fs.existsSync(path.join(e,"src"))||(error("No src/ directory found. Please ensure you are in a Discraft project directory."),process.exit(1));const r=path.join(e,"src");generateCommands(r),generateEvents(r);const o=nodemon({exec:"node -r dotenv/config",script:path.join(r,"index.js"),watch:[r],ext:"js",env:{NODE_ENV:"development"}});o.on("quit",(()=>{info("Development mode terminated"),process.exit()})),o.on("error",(e=>{error("Nodemon error:",e)})),o.on("restart",(e=>{const o=Date.now();info(`Restarting due to changes in ${e.length} files...`),generateCommands(r),generateEvents(r),success(`Restart complete in ${Date.now()-o}ms`)})),process.on("SIGINT",(()=>{warn("Received SIGINT. Gracefully shutting down..."),o.emit("quit")})),process.on("SIGTERM",(()=>{warn("Received SIGTERM. Gracefully shutting down..."),o.emit("quit")})),o.on("start",(()=>{info("Starting development mode...")})),o.on("stdout",(e=>{process.stdout.write(e)})),o.on("stderr",(e=>{process.stderr.write(e)})),o.on("crash",(()=>{error("Application crashed - waiting for file changes before restarting...")}))}catch(e){"ENOENT"===e.code?error("Could not determine current working directory. Please ensure you are in a valid directory with proper permissions."):error("Failed to start development server:",e),process.exit(1)}