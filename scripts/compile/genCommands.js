import fs from"fs";import path from"path";import{info,debug,error}from"../../common/utils/logger.js";export default function generateCommands(srcDir){try{debug("Generating discraft/commands/index.js...");const COMMANDS_DIR=path.join(srcDir,"commands"),OUTPUT_DIR=path.join(srcDir,"discraft","commands"),OUTPUT_FILE=path.join(OUTPUT_DIR,"index.js");fs.existsSync(OUTPUT_DIR)||fs.mkdirSync(OUTPUT_DIR,{recursive:!0});const commandFiles=fs.readdirSync(COMMANDS_DIR).filter((file=>file.endsWith(".js")&&"index.js"!==file));let content="";0===commandFiles.length?content="// No commands found\nexport const commands = {};\n":(commandFiles.forEach((file=>{const commandName=path.basename(file,".js");content+=`import ${commandName} from '../../commands/${file}';\n`})),content+="\n// Export all commands in a map\n",content+="export const commands = {\n",commandFiles.forEach((file=>{const commandName=path.basename(file,".js");content+=`  [${commandName}.data.name]: ${commandName},\n`})),content+="};"),fs.writeFileSync(OUTPUT_FILE,content),info("Generated discraft/commands/index.js")}catch(err){error("Error generating discraft/commands/index.js:",err)}}