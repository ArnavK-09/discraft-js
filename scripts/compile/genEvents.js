import fs from"fs";import path from"path";import{info,debug,error}from"../../common/utils/logger.js";export default function generateEvents(srcDir){try{debug("Generating discraft/events/index.js...");const EVENTS_DIR=path.join(srcDir,"events"),OUTPUT_DIR=path.join(srcDir,"discraft","events"),OUTPUT_FILE=path.join(OUTPUT_DIR,"index.js");fs.existsSync(OUTPUT_DIR)||fs.mkdirSync(OUTPUT_DIR,{recursive:!0});const eventFiles=fs.readdirSync(EVENTS_DIR).filter((file=>file.endsWith(".js")&&"index.js"!==file));let content="";0===eventFiles.length?content="// No events found\nexport const events = {};\n":(eventFiles.forEach((file=>{const eventName=path.basename(file,".js");content+=`import ${eventName} from '../../events/${file}';\n`})),content+="\n// Export all events with their handlers\n",content+="export const events = {\n",eventFiles.forEach((file=>{const eventName=path.basename(file,".js");content+=`  ${eventName},\n`})),content+="};"),fs.writeFileSync(OUTPUT_FILE,content),info("Generated discraft/events/index.js")}catch(err){error("Error generating discraft/events/index.js:",err)}}