import fs from"fs";import path from"path";import{info,success}from"../../common/utils/logger.js";export function formatBytes(s){if(0===s)return"0 Bytes";const t=Math.floor(Math.log(s)/Math.log(1024));return parseFloat((s/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}export async function getFileSizes(s){const t=await fs.promises.readdir(s,{withFileTypes:!0});let i=0;for(const e of t){const t=path.join(s,e.name);if(e.isDirectory())i+=await getFileSizes(t);else if(e.name.endsWith(".js")){i+=(await fs.promises.stat(t)).size}}return i}export async function displaySizeComparison(s,t){const i=path.join(t,"bundle.js"),e=fs.existsSync(i)?(await fs.promises.stat(i)).size:0,o=s>0?((s-e)/s*100).toFixed(1):0;info("\nBuild Statistics:"),info("================"),info("Source Files:"),info(`  Original Size: ${formatBytes(s)}`),info("\nBundle:"),info(`  Final Size: ${formatBytes(e)}`),info(`  Size Reduction: ${o}%\n`),success("\nTotal Results:"),success(`Original Size: ${formatBytes(s)}`),success(`Final Size  : ${formatBytes(e)}`),success(`Total Saved : ${o}%`)}